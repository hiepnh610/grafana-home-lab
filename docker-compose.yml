---
version: '3.8'

services:
  speedtest:
    container_name: speedtest
    image: openspeedtest/latest
    restart: unless-stopped
    ports:
      - 5000:3000
      - 5001:3001

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    ports:
      - 9443:9443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - home-lab

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    privileged: true
    restart: unless-stopped
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    networks:
      - home-lab
    depends_on:
      - portainer

  node_exporter:
    container_name: node_exporter
    image: quay.io/prometheus/node-exporter:latest
    pid: host
    command: '--path.rootfs=/host'
    restart: unless-stopped
    ports:
      - 9100:9100
    volumes:
      - /:/host:ro,rslave
    networks:
      - home-lab
    depends_on:
      - portainer

  adguard_exporter:
    container_name: adguard_exporter
    image: ebrianne/adguard-exporter:latest
    restart: unless-stopped
    ports:
      - 9617:9617
    environment:
      - adguard_protocol=http
      - adguard_hostname=${ADGUARD_HOST}
      - adguard_username=${ADGUARD_USERNAME}
      - adguard_password=${ADGUARD_PASSWORD}
      - interval=10s
      - log_limit=10000
      - server_port=9617
    networks:
      - home-lab
    depends_on:
      - portainer

  fortigate_exporter:
    container_name: fortigate_exporter
    image: quay.io/bluecmd/fortigate_exporter:latest
    command: ['-auth-file', '/config/fortigate-key.yaml', '-insecure']
    restart: unless-stopped
    volumes:
      - ./config/fortigate/fortigate-key.yaml:/config/fortigate-key.yaml
    ports:
      - 9710:9710
    networks:
      - home-lab
    depends_on:
      - portainer

  # snmp_exporter:
  #   container_name: snmp_exporter
  #   image: quay.io/prometheus/snmp-exporter
  #   command: --config.file=/etc/snmp_exporter/snmp.yml
  #   restart: unless-stopped
  #   ports:
  #     - 9116:9116
  #     - 116:116/udp
  #   volumes:
  #     - snmp-data:/etc/snmp_exporter
  #   networks:
  #     - home-lab
  #   depends_on:
  #     - fortigate_exporter

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    command: '--config.file=/etc/prometheus/prometheus.yaml'
    restart: unless-stopped
    user: root
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus/config.yaml:/etc/prometheus/prometheus.yaml:ro
      - prometheus-data:/prometheus
    networks:
      - home-lab
    depends_on:
      - portainer
      - cadvisor
      - node_exporter
      - adguard_exporter
      - fortigate_exporter

  grafana:
    container_name: grafana
    image: grafana/grafana-oss:latest
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/custom.ini:/etc/grafana/grafana.ini
    networks:
      - home-lab
    depends_on:
      - prometheus

  homer:
    container_name: homer
    image: b4bz/homer:latest
    restart: unless-stopped
    ports:
      - 8000:8080
    volumes:
      - ./config/homer/assets:/www/assets
    networks:
      - home-lab
    depends_on:
      - grafana

  cloudflare_tunnel:
    container_name: cloudflare_tunnel
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: 'tunnel --no-autoupdate run'
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    depends_on:
      - homer

  nginx:
    container_name: nginx
    image: jc21/nginx-proxy-manager:latest
    restart: unless-stopped
    ports:
      - 80:80
      - 81:81
      - 443:443
    environment:
      DB_MYSQL_HOST: 'database'
      DB_MYSQL_PORT: 3306
      DB_MYSQL_NAME: 'npm'
      DB_MYSQL_PASSWORD: 'npm'
      DB_MYSQL_USER: 'npm'
    volumes:
      - nginx-data:/data
      - nginx-data-ssl:/etc/letsencrypt
    networks:
      - home-lab
    depends_on:
      - database

  database:
    container_name: database
    image: 'jc21/mariadb-aria:latest'
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 'npm'
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: 'npm'
    volumes:
      - database-data:/var/lib/mysql
    networks:
      - home-lab

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  portainer-data:
    driver: local
  # snmp-data:
  #   driver: local
  nginx-data:
    driver: local
  nginx-data-ssl:
    driver: local
  database-data:
    driver: local

networks:
  home-lab:
    driver: bridge
